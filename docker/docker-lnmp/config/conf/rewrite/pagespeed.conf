pagespeed on;
# 开启 Pagespeed
pagespeed FileCachePath /var/ngx_pagespeed_cache;
# 设置缓存目录



pagespeed RewriteLevel CoreFilters;
# Rewrite 级别 出于安全考虑 这里尽量不要修改
pagespeed EnableFilters local_storage_cache;
# 本地缓存
pagespeed EnableFilters collapse_whitespace,remove_comments;
# 自动去除缩进和页面中的注释  if 注释除外
pagespeed EnableFilters outline_css;
# 自动将过长的 CSS 标签 放到独立文件中
pagespeed EnableFilters flatten_css_imports;
# 这个没太看懂
pagespeed EnableFilters move_css_above_scripts;
# 将 CSS 放到 Script 的后面
pagespeed EnableFilters move_css_to_head;
# 将 CSS 放到页面头部
pagespeed EnableFilters outline_javascript;
# 自动将过长的 Script 标签 放到独立文件中
pagespeed EnableFilters combine_javascript;
# 自动合并多个 JS 文件
pagespeed EnableFilters combine_css;
# 自动合并多个 CSS 文件
pagespeed EnableFilters elide_attributes;
# 删除带默认属性的标签
pagespeed EnableFilters extend_cache;
# 改善资源的可缓存性

pagespeed EnableFilters flatten_css_imports;
# 更换被导入文件的@import，精简CSS文件
pagespeed EnableFilters rewrite_javascript;
# 对 JS 的 URL 进行重写 貌似是在 URL 的后面添加了 Hash 以便内容能同步更新到用户的浏览器中
pagespeed EnableFilters rewrite_css,sprite_images;
# 检测 CSS 中的背景图片 并把它们合为一张大图片 在使用时自动截取原来的部分
pagespeed EnableFilters rewrite_style_attributes;
# 当 rewrite css 启用时 将自动压缩 CSS 
pagespeed EnableFilters recompress_images;
# 自动压缩图片
pagespeed EnableFilters resize_images;
# 自动缩放图片到合适大小
pagespeed EnableFilters lazyload_images;
# 延时加载客户端看不见的图片
pagespeed EnableFilters convert_png_to_jpeg;
pagespeed EnableFilters convert_jpeg_to_webp;
#支持webp

pagespeed EnableFilters convert_meta_tags;
pagespeed EnableFilters prioritize_critical_css;
# 重写CSS，首先加载渲染页面的CSS规则

pagespeed EnableFilters insert_dns_prefetch;
# 预解析DNS查询
 
# 将 meta 转换为 header 
location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" { add_header "" ""; }
location ~ "^/ngx_pagespeed_static/" { }
location ~ "^/ngx_pagespeed_beacon$" { }
location /ngx_pagespeed_statistics { allow 127.0.0.1; deny all; }
location /ngx_pagespeed_message { allow 127.0.0.1; deny all; }